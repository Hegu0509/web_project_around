!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var r=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.configForm=t,this.element=n},(n=[{key:"_showInputError",value:function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(this.configForm.inputErrorClass),r.textContent=n,r.classList.add(this.configForm.errorClass)}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(this.configForm.inputErrorClass),n.classList.remove(this.configForm.errorClass),n.textContent=""}},{key:"_checkInputValidity",value:function(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this.configForm.inactiveButtonClass),t.disabled=!0):(t.classList.remove(this.configForm.inactiveButtonClass),t.disabled=!1)}},{key:"_setEventListeners",value:function(e){var t=this,n=Array.from(e.querySelectorAll(this.configForm.inputSelector)),r=e.querySelector(this.configForm.submitButtonSelector);this._toggleButtonState(n,r),n.forEach((function(o){o.addEventListener("input",(function(){t._checkInputValidity(e,o),t._toggleButtonState(n,r)}))}))}},{key:"enableValidation",value:function(){var e=this;Array.from(document.querySelectorAll(this.configForm.formSelector)).forEach((function(t){t.addEventListener(e.element,(function(e){e.preventDefault()})),Array.from(t.querySelectorAll(e.configForm.fieldsetSelector)).forEach((function(t){e._setEventListeners(t)}))}))}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}(),o=document.querySelector(".profile__info-edit-button"),i=document.querySelector(".profile__info-add-button"),u=document.querySelector("#inputName"),c=document.querySelector("#inputAbout"),a=(document.querySelector(".profile__info-name"),document.querySelector(".profile__info-occupation"),document.querySelector("#inputTitle"),document.querySelector("#inputLink"),document.querySelector(".place-grid")),l=document.querySelector(".profile__avatar-container"),s=document.querySelector(".profile__avatar");function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,y(r.key),r)}}function y(e){var t=function(e){if("object"!=f(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==f(t)?t:t+""}var m=function(){return e=function e(t,n,r,o){var i=o.handleCardClick,u=o.handleDeleteCard,c=o.handleAddLike,a=o.handleRemoveLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.card=t,this._name=t.name,this._link=t.link,this._description=t.description,this._selector=n,this._user=r,this._handleCardClick=i,this._handleDeleteCard=u,this._handleAddLike=c,this._handleRemoveLike=a},(t=[{key:"_addEventListenersToCard",value:function(){var e=this,t=this._element.querySelector(".".concat(this._selector,"-icon-trash")),n=this._element.querySelector(".".concat(this._selector,"-icon-like"));this._element.querySelector(".".concat(this._selector,"-image")).addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),t.addEventListener("click",(function(t){t&&e._handleDeleteCard(e.card._id,(function(){e._element.remove()}))})),n.addEventListener("click",(function(t){var n=e._element.querySelector(".".concat(e._selector,"-counter-like"));t&&(e.card.likes.some((function(t){return t._id===e._user._id}))?e._handleRemoveLike(e.card._id).then((function(r){e.card=r,t.target.classList.remove("".concat(e._selector,"-icon-like_active")),n.textContent=e.card.likes.length})):e._handleAddLike(e.card._id).then((function(r){e.card=r,t.target.classList.add("".concat(e._selector,"-icon-like_active")),n.textContent=e.card.likes.length})))}))}},{key:"createCard",value:function(){var e=this;this._element=this._getTemplate(),this._element.querySelector(".".concat(this._selector,"-image")).src=this._link,this._element.querySelector(".".concat(this._selector,"-image")).alt=this._description,this._element.querySelector(".".concat(this._selector,"-text")).textContent=this._name,this._addEventListenersToCard();var t=this._element.querySelector(".".concat(this._selector,"-icon-trash")),n=this._element.querySelector(".".concat(this._selector,"-icon-like"));return this._user._id!==this.card.owner._id&&t.remove(),this.card.likes.some((function(t){return t._id===e._user._id}))&&n.classList.add("".concat(this._selector,"-icon-like_active")),this._element.querySelector(".".concat(this._selector,"-counter-like")).textContent=this.card.likes.length,this._element}},{key:"_getTemplate",value:function(){return document.querySelector("#templateCard").content.querySelector(".".concat(this._selector)).cloneNode(!0)}}])&&p(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,v(r.key),r)}}function v(e){var t=function(e){if("object"!=d(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==d(t)?t:t+""}var b=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.items=r,this._renderer=o,this.container=document.querySelector(n)},(t=[{key:"renderer",value:function(){var e=this;this.items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this.container.append(e)}}])&&h(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,k(r.key),r)}}function k(e){var t=function(e){if("object"!=_(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==_(t)?t:t+""}var g=function(){return e=function e(t){var n=t.nameSelector,r=t.aboutSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r)},(t=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._name.textContent=t,this._about.textContent=n}}])&&S(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,j(r.key),r)}}function j(e){var t=function(e){if("object"!=w(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==w(t)?t:t+""}var C=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector("#".concat(t)),this.setEventListeners(),this._handleEscClose=this._handleEscClose.bind(this)},(t=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-icon").addEventListener("click",(function(){e.close()})),this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&E(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,L(r.key),r)}}function L(e){var t=function(e){if("object"!=P(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==P(t)?t:t+""}function T(e,t,n){return t=R(t),function(e,t){if(t&&("object"==P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,q()?Reflect.construct(t,n||[],R(e).constructor):t.apply(e,n))}function q(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(q=function(){return!!e})()}function A(e,t,n,r){var o=I(R(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},I.apply(null,arguments)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}function U(e,t){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},U(e,t)}var D=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=T(this,t,[e]))._submitCallback=n,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&U(e,t)}(t,e),n=t,(r=[{key:"_getInputValues",value:function(){var e={},t=this._popupElement.querySelector(".form");return Array.from(t.querySelectorAll("input")).forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;A(t,"setEventListeners",this,3)([]),this._popupElement.querySelector(".form").addEventListener("submit",(function(t){t.preventDefault(),e._submitCallback(e._getInputValues()),e.close()}))}},{key:"close",value:function(){A(t,"close",this,3)([]),this._popupElement.querySelector(".form").reset()}}])&&O(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(C);function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,F(r.key),r)}}function F(e){var t=function(e){if("object"!=x(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==x(t)?t:t+""}function z(e,t,n){return t=J(t),function(e,t){if(t&&("object"==x(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,V()?Reflect.construct(t,n||[],J(e).constructor):t.apply(e,n))}function V(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(V=function(){return!!e})()}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},N.apply(null,arguments)}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}function G(e,t){return G=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},G(e,t)}var H=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=z(this,t,[e]))._popupImage=n._popupElement.querySelector(".popup__image"),n._popupTitle=n._popupElement.querySelector(".popup__image-name"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&G(e,t)}(t,e),n=t,r=[{key:"open",value:function(e,n){var r,o,i;this._popupImage.src=n,this._popupImage.alt="Imagen de ".concat(e," "),this._popupTitle.textContent=e,(r=t,o=this,i=N(J(1&3?r.prototype:r),"open",o),function(e){return i.apply(o,e)})([])}}],r&&B(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(C);function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Q(r.key),r)}}function Q(e){var t=function(e){if("object"!=M(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==M(t)?t:t+""}function W(e,t,n){return t=$(t),function(e,t){if(t&&("object"==M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,X()?Reflect.construct(t,n||[],$(e).constructor):t.apply(e,n))}function X(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(X=function(){return!!e})()}function Y(e,t,n,r){var o=Z($(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function Z(){return Z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=$(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},Z.apply(null,arguments)}function $(e){return $=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},$(e)}function ee(e,t){return ee=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ee(e,t)}var te=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),W(this,t,[e])}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ee(e,t)}(t,e),n=t,(r=[{key:"open",value:function(e){Y(t,"open",this,3)([]),this.handleDeleteSubmit=e}},{key:"setEventListeners",value:function(){var e=this;Y(t,"setEventListeners",this,3)([]),this._form=this._popupElement.querySelector(".form"),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.handleDeleteSubmit(),e.close()}))}}])&&K(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(C);function ne(e){return ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ne(e)}function re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,oe(r.key),r)}}function oe(e){var t=function(e){if("object"!=ne(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=ne(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ne(t)?t:t+""}var ie=new(function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t,this._token=n},(t=[{key:"getUserInfo",value:function(){return fetch(this._baseUrl+"/users/me",{headers:{authorization:this._token,"Content-Type":"application/json"},method:"GET"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{headers:{authorization:this._token,"Content-Type":"application/json"},method:"GET"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateUser",value:function(e,t){return fetch(this._baseUrl+"/users/me",{headers:{authorization:this._token,"Content-Type":"application/json"},method:"PATCH",body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCard",value:function(e,t){return fetch(this._baseUrl+"/cards",{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"POST",body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateAvatar",value:function(e){return fetch(this._baseUrl+"/users/me/avatar",{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"PATCH",body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch(this._baseUrl+"/cards/"+e,{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"PUT"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"removeLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&re(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}())("https://around.nomoreparties.co/v1/web-es-cohort-15","80b5e925-605c-4006-ba50-cc4527fb2e95"),ue=(document.querySelector("#formAdd"),document.querySelector(".profile__avatar")),ce=null,ae=new g({nameSelector:".profile__info-name",aboutSelector:".profile__info-occupation"});ie.getUserInfo().then((function(e){ce=e,ae.setUserInfo({name:e.name,about:e.about}),ue.src=e.avatar,ie.getInitialCards().then((function(e){(e=new b({items:e,renderer:function(t){var n=new m(t,"place-grid__element",ce,{handleCardClick:function(){le.open(t.name,t.link)},handleDeleteCard:function(e,t){pe.open((function(){ie.deleteCard(e).then((function(){})),t()}))},handleAddLike:function(e){return ie.addLike(e)},handleRemoveLike:function(e){return ie.removeLike(e)}});e.addItem(n.createCard())}},".place-grid")).renderer()}))}));var le=new H("popupImage"),se=new D("popupEdit",(function(e){ie.updateUser(e.inputName,e.inputAbout).then((function(e){ae.setUserInfo({name:e.name,about:e.about}),se.close()}))}));o.addEventListener("click",(function(){se.open();var e=ae.getUserInfo();u.value=e.name,c.value=e.about,me.enableValidation()}));var fe=new D("popupAdd",(function(e){return ie.addCard(e.inputTitle,e.inputLink).then((function(e){var t=new m(e,"place-grid__element",ce,{handleCardClick:function(){le.open(e.name,e.link)},handleDeleteCard:function(e,t){pe.open((function(){ie.deleteCard(e).then((function(){})),t()}))},handleAddLike:function(e){return ie.addLike(e)},handleRemoveLike:function(e){return ie.removeLike(e)}});a.prepend(t.createCard())}))}));i.addEventListener("click",(function(){fe.open()}));var pe=new te("popupConfirmation"),ye=new D("popupEditAvatar",(function(e){return ie.updateAvatar(e.inputLink).then((function(e){s.src=e.avatar,s.alt="Profile Avatar",s.value="",ye.close()}))}));l.addEventListener("click",(function(){ye.open()}));var me=new r({formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",fieldsetSelector:".form__fieldset",inactiveButtonClass:"button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},"submit");me.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UW5CLEVBQVFTLGFBQzVCLEdBQ0osSUFFQTNILEVBQVVYLGlCQUFpQixTQUFTLFdBQ2xDNEksR0FBU2IsTUFDWCxJQUdBLElBQU1FLEdBQWEsSUFBSXBDLEdBQXNCLHFCQUd2Q29ELEdBQWtCLElBQUluRSxFQUFjLG1CQUFtQixTQUFDTSxHQUM1RCxPQUFPb0MsR0FBSTBCLGFBQWE5RCxFQUFZMkQsV0FBV2xHLE1BQUssU0FBQzRELEdBQ25EekYsRUFBWWlDLElBQU13RCxFQUFJVSxPQUN0Qm5HLEVBQVlrQyxJQUFNLGlCQUNsQmxDLEVBQVlqRCxNQUFRLEdBQ3BCa0wsR0FBZ0J0RSxPQUNsQixHQUNGLElBRUE1RCxFQUFpQmYsaUJBQWlCLFNBQVMsV0FDekNpSixHQUFnQmxCLE1BQ2xCLElBR0EsSUFVTVcsR0FBZ0IsSUFBSWpMLEVBVlAsQ0FDakIyQyxhQUFjLFFBQ2RSLGNBQWUsZUFDZkMscUJBQXNCLGdCQUN0QlUsaUJBQWtCLGtCQUNsQmpCLG9CQUFxQixrQkFDckJiLGdCQUFpQix5QkFDakJFLFdBQVksNEJBR3NDLFVBQ3BEK0osR0FBY0Msa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Bcm91bmQgVGhlIFUuUy4vLi9zcmMvdXRpbHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9Bcm91bmQgVGhlIFUuUy4vLi9zcmMvdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vQXJvdW5kIFRoZSBVLlMuLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9Bcm91bmQgVGhlIFUuUy4vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL0Fyb3VuZCBUaGUgVS5TLi8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL0Fyb3VuZCBUaGUgVS5TLi8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL0Fyb3VuZCBUaGUgVS5TLi8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vQXJvdW5kIFRoZSBVLlMuLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vQXJvdW5kIFRoZSBVLlMuLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzIiwid2VicGFjazovL0Fyb3VuZCBUaGUgVS5TLi8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9Bcm91bmQgVGhlIFUuUy4vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZ0Zvcm0sIGVsZW1lbnQpIHtcbiAgICB0aGlzLmNvbmZpZ0Zvcm0gPSBjb25maWdGb3JtO1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuY29uZmlnRm9ybS5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLmNvbmZpZ0Zvcm0uZXJyb3JDbGFzcyk7XG4gIH1cblxuICBfaGlkZUlucHV0RXJyb3IoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNvbmZpZ0Zvcm0uaW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmNvbmZpZ0Zvcm0uZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfVxuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCkge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihcbiAgICAgICAgZm9ybUVsZW1lbnQsXG4gICAgICAgIGlucHV0RWxlbWVudCxcbiAgICAgICAgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICBfaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkge1xuICAgIHJldHVybiBpbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfVxuXG4gIF90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpIHtcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcbiAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLmNvbmZpZ0Zvcm0uaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICBidXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuY29uZmlnRm9ybS5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoZm9ybUVsZW1lbnQpIHtcbiAgICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLmNvbmZpZ0Zvcm0uaW5wdXRTZWxlY3RvcilcbiAgICApO1xuICAgIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgdGhpcy5jb25maWdGb3JtLnN1Ym1pdEJ1dHRvblNlbGVjdG9yXG4gICAgKTtcblxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XG5cbiAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5jb25maWdGb3JtLmZvcm1TZWxlY3RvcilcbiAgICApO1xuXG4gICAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICAgIGZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIodGhpcy5lbGVtZW50LCAoZXZ0KSA9PiB7XG4gICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IGZpZWxkc2V0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICAgIGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5jb25maWdGb3JtLmZpZWxkc2V0U2VsZWN0b3IpXG4gICAgICApO1xuXG4gICAgICBmaWVsZHNldExpc3QuZm9yRWFjaCgoZmllbGRzZXQpID0+IHtcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoZmllbGRzZXQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImV4cG9ydCBjb25zdCBlZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbmZvLWVkaXQtYnV0dG9uXCIpO1xuZXhwb3J0IGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW5mby1hZGQtYnV0dG9uXCIpO1xuZXhwb3J0IGNvbnN0IGlucHV0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaW5wdXROYW1lXCIpO1xuZXhwb3J0IGNvbnN0IGlucHV0QWJvdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2lucHV0QWJvdXRcIik7XG5leHBvcnQgY29uc3QgdXNlck5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2luZm8tbmFtZVwiKTtcbmV4cG9ydCBjb25zdCBhYm91dE1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbmZvLW9jY3VwYXRpb25cIik7XG5leHBvcnQgY29uc3QgaW5wdXRUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaW5wdXRUaXRsZVwiKTtcbmV4cG9ydCBjb25zdCBpbnB1dExpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2lucHV0TGlua1wiKTtcbmV4cG9ydCBjb25zdCBwbGFjZUdyaWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlLWdyaWRcIik7XG5leHBvcnQgY29uc3QgZWRpdEF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnByb2ZpbGVfX2F2YXRhci1jb250YWluZXJcIlxuKTtcbmV4cG9ydCBjb25zdCBhdmF0YXJJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyXCIpO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIGNhcmQsXG4gICAgc2VsZWN0b3IsXG4gICAgdXNlcixcbiAgICB7IGhhbmRsZUNhcmRDbGljaywgaGFuZGxlRGVsZXRlQ2FyZCwgaGFuZGxlQWRkTGlrZSwgaGFuZGxlUmVtb3ZlTGlrZSB9XG4gICkge1xuICAgIHRoaXMuY2FyZCA9IGNhcmQ7XG4gICAgdGhpcy5fbmFtZSA9IGNhcmQubmFtZTtcbiAgICB0aGlzLl9saW5rID0gY2FyZC5saW5rO1xuICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gY2FyZC5kZXNjcmlwdGlvbjtcbiAgICB0aGlzLl9zZWxlY3RvciA9IHNlbGVjdG9yO1xuICAgIHRoaXMuX3VzZXIgPSB1c2VyO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkID0gaGFuZGxlRGVsZXRlQ2FyZDtcbiAgICB0aGlzLl9oYW5kbGVBZGRMaWtlID0gaGFuZGxlQWRkTGlrZTtcbiAgICB0aGlzLl9oYW5kbGVSZW1vdmVMaWtlID0gaGFuZGxlUmVtb3ZlTGlrZTtcbiAgfVxuXG4gIF9hZGRFdmVudExpc3RlbmVyc1RvQ2FyZCgpIHtcbiAgICBjb25zdCBkZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgLiR7dGhpcy5fc2VsZWN0b3J9LWljb24tdHJhc2hgXG4gICAgKTtcblxuICAgIGNvbnN0IGxpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgLiR7dGhpcy5fc2VsZWN0b3J9LWljb24tbGlrZWBcbiAgICApO1xuXG4gICAgdGhpcy5fZWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoYC4ke3RoaXMuX3NlbGVjdG9yfS1pbWFnZWApXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xuICAgICAgfSk7XG5cbiAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChldnQpIHtcbiAgICAgICAgLy8gZXZ0LnRhcmdldC5jbG9zZXN0KGAuJHt0aGlzLl9zZWxlY3Rvcn1gKS5yZW1vdmUoKTtcbiAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCh0aGlzLmNhcmQuX2lkLCAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBsaWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICBjb25zdCBjb3VudGVyID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICBgLiR7dGhpcy5fc2VsZWN0b3J9LWNvdW50ZXItbGlrZWBcbiAgICAgICk7XG4gICAgICBpZiAoZXZ0KSB7XG4gICAgICAgIGlmICh0aGlzLmNhcmQubGlrZXMuc29tZSgobGlrZSkgPT4gbGlrZS5faWQgPT09IHRoaXMuX3VzZXIuX2lkKSkge1xuICAgICAgICAgIHRoaXMuX2hhbmRsZVJlbW92ZUxpa2UodGhpcy5jYXJkLl9pZCkudGhlbigoY2FyZCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jYXJkID0gY2FyZDtcbiAgICAgICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZShgJHt0aGlzLl9zZWxlY3Rvcn0taWNvbi1saWtlX2FjdGl2ZWApO1xuICAgICAgICAgICAgY291bnRlci50ZXh0Q29udGVudCA9IHRoaXMuY2FyZC5saWtlcy5sZW5ndGg7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5faGFuZGxlQWRkTGlrZSh0aGlzLmNhcmQuX2lkKS50aGVuKChjYXJkKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNhcmQgPSBjYXJkO1xuICAgICAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuYWRkKGAke3RoaXMuX3NlbGVjdG9yfS1pY29uLWxpa2VfYWN0aXZlYCk7XG4gICAgICAgICAgICBjb3VudGVyLnRleHRDb250ZW50ID0gdGhpcy5jYXJkLmxpa2VzLmxlbmd0aDtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBldnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoYCR7dGhpcy5fc2VsZWN0b3J9LWljb24tbGlrZV9hY3RpdmVgKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGNyZWF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHt0aGlzLl9zZWxlY3Rvcn0taW1hZ2VgKS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7dGhpcy5fc2VsZWN0b3J9LWltYWdlYCkuYWx0ID1cbiAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7dGhpcy5fc2VsZWN0b3J9LXRleHRgKS50ZXh0Q29udGVudCA9XG4gICAgICB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzVG9DYXJkKCk7XG5cbiAgICBjb25zdCB0cmFzaEJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAuJHt0aGlzLl9zZWxlY3Rvcn0taWNvbi10cmFzaGBcbiAgICApO1xuXG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAuJHt0aGlzLl9zZWxlY3Rvcn0taWNvbi1saWtlYFxuICAgICk7XG5cbiAgICBpZiAodGhpcy5fdXNlci5faWQgIT09IHRoaXMuY2FyZC5vd25lci5faWQpIHtcbiAgICAgIHRyYXNoQnV0dG9uLnJlbW92ZSgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmNhcmQubGlrZXMuc29tZSgobGlrZSkgPT4gbGlrZS5faWQgPT09IHRoaXMuX3VzZXIuX2lkKSkge1xuICAgICAgbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKGAke3RoaXMuX3NlbGVjdG9yfS1pY29uLWxpa2VfYWN0aXZlYCk7XG4gICAgfVxuXG4gICAgY29uc3QgY291bnRlciA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAuJHt0aGlzLl9zZWxlY3Rvcn0tY291bnRlci1saWtlYFxuICAgICk7XG4gICAgY291bnRlci50ZXh0Q29udGVudCA9IHRoaXMuY2FyZC5saWtlcy5sZW5ndGg7XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCB0ZW1wbGF0ZUNhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RlbXBsYXRlQ2FyZFwiKS5jb250ZW50O1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gdGVtcGxhdGVDYXJkXG4gICAgICAucXVlcnlTZWxlY3RvcihgLiR7dGhpcy5fc2VsZWN0b3J9YClcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBzZWxlY3Rvcikge1xuICAgIHRoaXMuaXRlbXMgPSBpdGVtcztcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gIH1cblxuICByZW5kZXJlcigpIHtcbiAgICB0aGlzLml0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHRoaXMuX3JlbmRlcmVyKGl0ZW0pKTtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZChlbGVtZW50KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3RvciwgYWJvdXRTZWxlY3RvciB9KSB7XG4gICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcbiAgICB0aGlzLl9hYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYWJvdXRTZWxlY3Rvcik7XG4gIH1cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsXG4gICAgICBhYm91dDogdGhpcy5fYWJvdXQudGV4dENvbnRlbnQsXG4gICAgfTtcbiAgfVxuICBzZXRVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pIHtcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9hYm91dC50ZXh0Q29udGVudCA9IGFib3V0O1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHtwb3B1cFNlbGVjdG9yfWApO1xuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIGNvbnN0IHBvcHVwQ2xvc2VCdXR0b24gPVxuICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlLWljb25cIik7XG5cbiAgICBwb3B1cENsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cFwiKSkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBjYWxsQmFjaykge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3N1Ym1pdENhbGxiYWNrID0gY2FsbEJhY2s7XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcbiAgICBjb25zdCBmb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybVwiKTtcbiAgICBBcnJheS5mcm9tKGZvcm0ucXVlcnlTZWxlY3RvckFsbChcImlucHV0XCIpKS5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcblxuICAgIHJldHVybiBpbnB1dFZhbHVlcztcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgY29uc3QgZm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIik7XG4gICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5fc3VibWl0Q2FsbGJhY2sodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIGNvbnN0IGZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtXCIpO1xuICAgIGZvcm0ucmVzZXQoKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fcG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZVwiKTtcbiAgICB0aGlzLl9wb3B1cFRpdGxlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlLW5hbWVcIik7XG4gIH1cblxuICBvcGVuKG5hbWUsIGxpbmspIHtcbiAgICB0aGlzLl9wb3B1cEltYWdlLnNyYyA9IGxpbms7XG4gICAgdGhpcy5fcG9wdXBJbWFnZS5hbHQgPSBgSW1hZ2VuIGRlICR7bmFtZX0gYDtcbiAgICB0aGlzLl9wb3B1cFRpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtYXRpb24gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgfVxuXG4gIG9wZW4oaGFuZGxlRGVsZXRlU3VibWl0KSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuaGFuZGxlRGVsZXRlU3VibWl0ID0gaGFuZGxlRGVsZXRlU3VibWl0O1xuICB9XG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIik7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuaGFuZGxlRGVsZXRlU3VibWl0KCk7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKGJhc2VVcmwsIHRva2VuKSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgdGhpcy5fdG9rZW4gPSB0b2tlbjtcbiAgfVxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL3VzZXJzL21lXCIsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi9jYXJkc1wiLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIH0sXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG4gIHVwZGF0ZVVzZXIobmFtZSwgYWJvdXQpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL3VzZXJzL21lXCIsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBhYm91dCxcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuICBhZGRDYXJkKG5hbWUsIGxpbmspIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL2NhcmRzXCIsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgQXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGxpbmssXG4gICAgICB9KSxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cbiAgdXBkYXRlQXZhdGFyKGF2YXRhcikge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgXCIvdXNlcnMvbWUvYXZhdGFyXCIsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgQXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXIsXG4gICAgICB9KSxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfSk7XG4gIH1cbiAgZGVsZXRlQ2FyZChpZENhcmQpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL2NhcmRzL1wiICsgaWRDYXJkLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIEF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIH0sXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgYWRkTGlrZShpZENhcmQpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL2NhcmRzL2xpa2VzL1wiICsgaWRDYXJkLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIEF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIH0sXG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgcmVtb3ZlTGlrZShpZENhcmQpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL2NhcmRzL2xpa2VzL1wiICsgaWRDYXJkLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIEF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIH0sXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG59XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoXG4gIFwiaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS93ZWItZXMtY29ob3J0LTE1XCIsXG4gIFwiODBiNWU5MjUtNjA1Yy00MDA2LWJhNTAtY2M0NTI3ZmIyZTk1XCJcbik7XG5cbmV4cG9ydCBkZWZhdWx0IGFwaTtcbiIsImltcG9ydCBcIi4vcGFnZXMvaW5kZXguY3NzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi91dGlscy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQge1xuICBlZGl0QnV0dG9uLFxuICBhZGRCdXR0b24sXG4gIGlucHV0TmFtZSxcbiAgaW5wdXRBYm91dCxcbiAgcGxhY2VHcmlkLFxuICBlZGl0QXZhdGFyQnV0dG9uLFxuICBhdmF0YXJJbWFnZSxcbn0gZnJvbSBcIi4vdXRpbHMvdXRpbHMuanNcIjtcbmltcG9ydCBDYXJkIGZyb20gXCIuL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm1hdGlvbiBmcm9tIFwiLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qc1wiO1xuaW1wb3J0IGFwaSBmcm9tIFwiLi9jb21wb25lbnRzL0FwaS5qc1wiO1xuXG5jb25zdCBmb3JtQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb3JtQWRkXCIpO1xuXG5jb25zdCBhdmF0YXJOb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIik7XG5sZXQgY3VycmVudFVzZXIgPSBudWxsO1xubGV0IGNhcmRzID0gbnVsbDtcblxuLy8gT2J0aWVuZSBkYXRvcyBkZSBwZXJmaWxcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgbmFtZVNlbGVjdG9yOiBcIi5wcm9maWxlX19pbmZvLW5hbWVcIixcbiAgYWJvdXRTZWxlY3RvcjogXCIucHJvZmlsZV9faW5mby1vY2N1cGF0aW9uXCIsXG59KTtcblxuYXBpLmdldFVzZXJJbmZvKCkudGhlbigodXNlcikgPT4ge1xuICBjdXJyZW50VXNlciA9IHVzZXI7XG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKHsgbmFtZTogdXNlci5uYW1lLCBhYm91dDogdXNlci5hYm91dCB9KTtcbiAgYXZhdGFyTm9kZS5zcmMgPSB1c2VyLmF2YXRhcjtcblxuICBhcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigoY2FyZHMpID0+IHtcbiAgICAvLyBTZSBhZ3JlZ2EgY2FyZHMgaW5pY2lhbGVzXG4gICAgY2FyZHMgPSBuZXcgU2VjdGlvbihcbiAgICAgIHtcbiAgICAgICAgaXRlbXM6IGNhcmRzLFxuICAgICAgICByZW5kZXJlcjogKGVsZW1lbnQpID0+IHtcbiAgICAgICAgICBjb25zdCBuZXdDYXJkID0gbmV3IENhcmQoXG4gICAgICAgICAgICBlbGVtZW50LFxuICAgICAgICAgICAgXCJwbGFjZS1ncmlkX19lbGVtZW50XCIsXG4gICAgICAgICAgICBjdXJyZW50VXNlcixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgaGFuZGxlQ2FyZENsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcG9wdXBJbWFnZS5vcGVuKGVsZW1lbnQubmFtZSwgZWxlbWVudC5saW5rKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgaGFuZGxlRGVsZXRlQ2FyZDogKGNhcmRJZCwgY2FsbEJhY2spID0+IHtcbiAgICAgICAgICAgICAgICBkZWxldGVGb3JtLm9wZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgYXBpLmRlbGV0ZUNhcmQoY2FyZElkKS50aGVuKCgpID0+IHt9KTtcbiAgICAgICAgICAgICAgICAgIGNhbGxCYWNrKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGhhbmRsZUFkZExpa2U6IChjYXJkSWQpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLmFkZExpa2UoY2FyZElkKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgaGFuZGxlUmVtb3ZlTGlrZTogKGNhcmRJZCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBhcGkucmVtb3ZlTGlrZShjYXJkSWQpO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfVxuICAgICAgICAgICk7XG4gICAgICAgICAgY2FyZHMuYWRkSXRlbShuZXdDYXJkLmNyZWF0ZUNhcmQoKSk7XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgXCIucGxhY2UtZ3JpZFwiXG4gICAgKTtcbiAgICBjYXJkcy5yZW5kZXJlcigpO1xuICB9KTtcbn0pO1xuXG4vLyBQb3B1cCBJbWFnZVxuY29uc3QgcG9wdXBJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcInBvcHVwSW1hZ2VcIik7XG5cbi8vIFBvcHVwIEVkaXRhclxuY29uc3QgcG9wdXBFZGl0ID0gbmV3IFBvcHVwV2l0aEZvcm0oXCJwb3B1cEVkaXRcIiwgKGlucHV0VmFsdWVzKSA9PiB7XG4gIGFwaS51cGRhdGVVc2VyKGlucHV0VmFsdWVzLmlucHV0TmFtZSwgaW5wdXRWYWx1ZXMuaW5wdXRBYm91dCkudGhlbigodXNlcikgPT4ge1xuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHsgbmFtZTogdXNlci5uYW1lLCBhYm91dDogdXNlci5hYm91dCB9KTtcbiAgICBwb3B1cEVkaXQuY2xvc2UoKTtcbiAgfSk7XG59KTtcblxuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBwb3B1cEVkaXQub3BlbigpO1xuICBjb25zdCB1c2VyRGF0YSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gIGlucHV0TmFtZS52YWx1ZSA9IHVzZXJEYXRhLm5hbWU7XG4gIGlucHV0QWJvdXQudmFsdWUgPSB1c2VyRGF0YS5hYm91dDtcbiAgZm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG59KTtcblxuLy9Qb3B1cCBBZ3JlZ2FyXG5jb25zdCBwb3B1cEFkZCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwicG9wdXBBZGRcIiwgKGlucHV0VmFsdWVzKSA9PiB7XG4gIHJldHVybiBhcGlcbiAgICAuYWRkQ2FyZChpbnB1dFZhbHVlcy5pbnB1dFRpdGxlLCBpbnB1dFZhbHVlcy5pbnB1dExpbmspXG4gICAgLnRoZW4oKGNhcmQpID0+IHtcbiAgICAgIGNvbnN0IG5ld0NhcmQgPSBuZXcgQ2FyZChjYXJkLCBcInBsYWNlLWdyaWRfX2VsZW1lbnRcIiwgY3VycmVudFVzZXIsIHtcbiAgICAgICAgaGFuZGxlQ2FyZENsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgcG9wdXBJbWFnZS5vcGVuKGNhcmQubmFtZSwgY2FyZC5saW5rKTtcbiAgICAgICAgfSxcbiAgICAgICAgaGFuZGxlRGVsZXRlQ2FyZDogKGNhcmRJZCwgY2FsbEJhY2spID0+IHtcbiAgICAgICAgICBkZWxldGVGb3JtLm9wZW4oKCkgPT4ge1xuICAgICAgICAgICAgYXBpLmRlbGV0ZUNhcmQoY2FyZElkKS50aGVuKCgpID0+IHt9KTtcbiAgICAgICAgICAgIGNhbGxCYWNrKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGhhbmRsZUFkZExpa2U6IChjYXJkSWQpID0+IHtcbiAgICAgICAgICByZXR1cm4gYXBpLmFkZExpa2UoY2FyZElkKTtcbiAgICAgICAgfSxcbiAgICAgICAgaGFuZGxlUmVtb3ZlTGlrZTogKGNhcmRJZCkgPT4ge1xuICAgICAgICAgIHJldHVybiBhcGkucmVtb3ZlTGlrZShjYXJkSWQpO1xuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgICBwbGFjZUdyaWQucHJlcGVuZChuZXdDYXJkLmNyZWF0ZUNhcmQoKSk7XG4gICAgfSk7XG59KTtcblxuYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIHBvcHVwQWRkLm9wZW4oKTtcbn0pO1xuXG4vL1BvcHVwIGNvbmZpcm1hciBlbGltaW5hclxuY29uc3QgZGVsZXRlRm9ybSA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24oXCJwb3B1cENvbmZpcm1hdGlvblwiKTtcblxuLy9Qb3B1cCBFZGl0YXIgZm90byBkZSBwZXJmaWxcbmNvbnN0IHBvcHVwRWRpdEF2YXRhciA9IG5ldyBQb3B1cFdpdGhGb3JtKFwicG9wdXBFZGl0QXZhdGFyXCIsIChpbnB1dFZhbHVlcykgPT4ge1xuICByZXR1cm4gYXBpLnVwZGF0ZUF2YXRhcihpbnB1dFZhbHVlcy5pbnB1dExpbmspLnRoZW4oKHJlcykgPT4ge1xuICAgIGF2YXRhckltYWdlLnNyYyA9IHJlcy5hdmF0YXI7XG4gICAgYXZhdGFySW1hZ2UuYWx0ID0gXCJQcm9maWxlIEF2YXRhclwiO1xuICAgIGF2YXRhckltYWdlLnZhbHVlID0gXCJcIjtcbiAgICBwb3B1cEVkaXRBdmF0YXIuY2xvc2UoKTtcbiAgfSk7XG59KTtcblxuZWRpdEF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBwb3B1cEVkaXRBdmF0YXIub3BlbigpO1xufSk7XG5cbi8vIENvbmZpZ3VyYWNpb24gcGFyYSBsYSB2YWxpZGFjaW9uIGRlIGZvcm11bGFyaW9zXG5jb25zdCBjb25maWdGb3JtID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLmZvcm1cIixcbiAgaW5wdXRTZWxlY3RvcjogXCIuZm9ybV9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLmZvcm1fX2J1dHRvblwiLFxuICBmaWVsZHNldFNlbGVjdG9yOiBcIi5mb3JtX19maWVsZHNldFwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcImJ1dHRvbl9pbmFjdGl2ZVwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcImZvcm1fX2lucHV0LWVycm9yX2FjdGl2ZVwiLFxufTtcblxuY29uc3QgZm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZ0Zvcm0sIFwic3VibWl0XCIpO1xuZm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4iXSwibmFtZXMiOlsiRm9ybVZhbGlkYXRvciIsImNvbmZpZ0Zvcm0iLCJlbGVtZW50IiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsImtleSIsInZhbHVlIiwiZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29uY2F0IiwiaWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJpbnB1dEVycm9yQ2xhc3MiLCJ0ZXh0Q29udGVudCIsImVycm9yQ2xhc3MiLCJyZW1vdmUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJpbnB1dExpc3QiLCJzb21lIiwiYnV0dG9uRWxlbWVudCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiZGlzYWJsZWQiLCJfdGhpcyIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfdGhpczIiLCJkb2N1bWVudCIsImZvcm1TZWxlY3RvciIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiZmllbGRzZXRTZWxlY3RvciIsImZpZWxkc2V0IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiZWRpdEJ1dHRvbiIsImFkZEJ1dHRvbiIsImlucHV0TmFtZSIsImlucHV0QWJvdXQiLCJwbGFjZUdyaWQiLCJlZGl0QXZhdGFyQnV0dG9uIiwiYXZhdGFySW1hZ2UiLCJDYXJkIiwiY2FyZCIsInNlbGVjdG9yIiwidXNlciIsIl9yZWYiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVEZWxldGVDYXJkIiwiaGFuZGxlQWRkTGlrZSIsImhhbmRsZVJlbW92ZUxpa2UiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfZGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvbiIsIl9zZWxlY3RvciIsIl91c2VyIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVEZWxldGVDYXJkIiwiX2hhbmRsZUFkZExpa2UiLCJfaGFuZGxlUmVtb3ZlTGlrZSIsImRlbGV0ZUJ1dHRvbiIsIl9lbGVtZW50IiwibGlrZUJ1dHRvbiIsIl9pZCIsImNvdW50ZXIiLCJsaWtlcyIsImxpa2UiLCJ0aGVuIiwidGFyZ2V0IiwibGVuZ3RoIiwiX2dldFRlbXBsYXRlIiwic3JjIiwiYWx0IiwiX2FkZEV2ZW50TGlzdGVuZXJzVG9DYXJkIiwidHJhc2hCdXR0b24iLCJvd25lciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJTZWN0aW9uIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsImNvbnRhaW5lciIsIml0ZW0iLCJhcHBlbmQiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImFib3V0U2VsZWN0b3IiLCJfYWJvdXQiLCJhYm91dCIsIl9yZWYyIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsInNldEV2ZW50TGlzdGVuZXJzIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsImNsb3NlIiwiZXZlbnQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJfUG9wdXAiLCJjYWxsQmFjayIsIl9jYWxsU3VwZXIiLCJfc3VibWl0Q2FsbGJhY2siLCJfaW5oZXJpdHMiLCJpbnB1dFZhbHVlcyIsImZvcm0iLCJpbnB1dCIsIl9zdXBlclByb3BHZXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlBvcHVwV2l0aEltYWdlIiwiX3BvcHVwSW1hZ2UiLCJfcG9wdXBUaXRsZSIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsImhhbmRsZURlbGV0ZVN1Ym1pdCIsIl9mb3JtIiwiQXBpIiwiYmFzZVVybCIsInRva2VuIiwiX2Jhc2VVcmwiLCJfdG9rZW4iLCJmZXRjaCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwibWV0aG9kIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiQXV0aG9yaXphdGlvbiIsImF2YXRhciIsImlkQ2FyZCIsImF2YXRhck5vZGUiLCJjdXJyZW50VXNlciIsInVzZXJJbmZvIiwiYXBpIiwiZ2V0VXNlckluZm8iLCJzZXRVc2VySW5mbyIsImdldEluaXRpYWxDYXJkcyIsImNhcmRzIiwibmV3Q2FyZCIsInBvcHVwSW1hZ2UiLCJvcGVuIiwiY2FyZElkIiwiZGVsZXRlRm9ybSIsImRlbGV0ZUNhcmQiLCJhZGRMaWtlIiwicmVtb3ZlTGlrZSIsImFkZEl0ZW0iLCJjcmVhdGVDYXJkIiwicG9wdXBFZGl0IiwidXBkYXRlVXNlciIsInVzZXJEYXRhIiwiZm9ybVZhbGlkYXRvciIsImVuYWJsZVZhbGlkYXRpb24iLCJwb3B1cEFkZCIsImFkZENhcmQiLCJpbnB1dFRpdGxlIiwiaW5wdXRMaW5rIiwicHJlcGVuZCIsInBvcHVwRWRpdEF2YXRhciIsInVwZGF0ZUF2YXRhciJdLCJzb3VyY2VSb290IjoiIn0=