!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var r=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.configForm=t,this.element=n},(n=[{key:"_showInputError",value:function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(this.configForm.inputErrorClass),r.textContent=n,r.classList.add(this.configForm.errorClass)}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(this.configForm.inputErrorClass),n.classList.remove(this.configForm.errorClass),n.textContent=""}},{key:"_checkInputValidity",value:function(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?t.classList.add(this.configForm.inactiveButtonClass):t.classList.remove(this.configForm.inactiveButtonClass)}},{key:"_setEventListeners",value:function(e){var t=this,n=Array.from(e.querySelectorAll(this.configForm.inputSelector)),r=e.querySelector(this.configForm.submitButtonSelector);this._toggleButtonState(n,r),n.forEach((function(o){o.addEventListener("input",(function(){t._checkInputValidity(e,o),t._toggleButtonState(n,r)}))}))}},{key:"enableValidation",value:function(){var e=this;Array.from(document.querySelectorAll(this.configForm.formSelector)).forEach((function(t){t.addEventListener(e.element,(function(e){e.preventDefault()})),Array.from(t.querySelectorAll(e.configForm.fieldsetSelector)).forEach((function(t){e._setEventListeners(t)}))}))}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}(),o=document.querySelector(".profile__info-edit-button"),i=document.querySelector(".profile__info-add-button"),u=document.querySelector("#inputName"),c=document.querySelector("#inputAbout"),a=(document.querySelector(".profile__info-name"),document.querySelector(".profile__info-occupation"),document.querySelector("#inputTitle"),document.querySelector("#inputLink"),document.querySelector(".place-grid")),l=document.querySelector(".profile__avatar-container"),s=document.querySelector(".profile__avatar");function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,y(r.key),r)}}function y(e){var t=function(e){if("object"!=f(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==f(t)?t:t+""}var m=function(){return e=function e(t,n,r,o){var i=o.handleCardClick,u=o.handleDeleteCard,c=o.handleAddLike,a=o.handleRemoveLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.card=t,this._name=t.name,this._link=t.link,this._description=t.description,this._selector=n,this._user=r,this._handleCardClick=i,this._handleDeleteCard=u,this._handleAddLike=c,this._handleRemoveLike=a},(t=[{key:"_addEventListenersToCard",value:function(){var e=this,t=this._element.querySelector(".".concat(this._selector,"-icon-trash")),n=this._element.querySelector(".".concat(this._selector,"-icon-like"));this._element.querySelector(".".concat(this._selector,"-image")).addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),t.addEventListener("click",(function(t){t&&e._handleDeleteCard(e.card._id,(function(){e._element.remove()}))})),n.addEventListener("click",(function(t){var n=e._element.querySelector(".".concat(e._selector,"-counter-like"));t&&(e.card.likes.some((function(t){return t._id===e._user._id}))?e._handleRemoveLike(e.card._id).then((function(r){e.card=r,t.target.classList.remove("".concat(e._selector,"-icon-like_active")),n.textContent=e.card.likes.length})):e._handleAddLike(e.card._id).then((function(r){e.card=r,t.target.classList.add("".concat(e._selector,"-icon-like_active")),n.textContent=e.card.likes.length})))}))}},{key:"createCard",value:function(){var e=this;this._element=this._getTemplate(),this._element.querySelector(".".concat(this._selector,"-image")).src=this._link,this._element.querySelector(".".concat(this._selector,"-image")).alt=this._description,this._element.querySelector(".".concat(this._selector,"-text")).textContent=this._name,this._addEventListenersToCard();var t=this._element.querySelector(".".concat(this._selector,"-icon-trash")),n=this._element.querySelector(".".concat(this._selector,"-icon-like"));return this._user._id!==this.card.owner._id&&t.remove(),this.card.likes.some((function(t){return t._id===e._user._id}))&&n.classList.add("".concat(this._selector,"-icon-like_active")),this._element.querySelector(".".concat(this._selector,"-counter-like")).textContent=this.card.likes.length,this._element}},{key:"_getTemplate",value:function(){return document.querySelector("#templateCard").content.querySelector(".".concat(this._selector)).cloneNode(!0)}}])&&p(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,v(r.key),r)}}function v(e){var t=function(e){if("object"!=d(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==d(t)?t:t+""}var b=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.items=r,this._renderer=o,this.container=document.querySelector(n)},(t=[{key:"renderer",value:function(){var e=this;this.items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this.container.append(e)}}])&&h(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,k(r.key),r)}}function k(e){var t=function(e){if("object"!=_(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==_(t)?t:t+""}var g=function(){return e=function e(t){var n=t.nameSelector,r=t.aboutSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r)},(t=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._name.textContent=t,this._about.textContent=n}}])&&S(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,j(r.key),r)}}function j(e){var t=function(e){if("object"!=w(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==w(t)?t:t+""}var C=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector("#".concat(t)),this.setEventListeners(),this._handleEscClose=this._handleEscClose.bind(this)},(t=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-icon").addEventListener("click",(function(){e.close()})),this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&E(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,L(r.key),r)}}function L(e){var t=function(e){if("object"!=P(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==P(t)?t:t+""}function T(e,t,n){return t=R(t),function(e,t){if(t&&("object"==P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,q()?Reflect.construct(t,n||[],R(e).constructor):t.apply(e,n))}function q(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(q=function(){return!!e})()}function A(e,t,n,r){var o=I(R(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},I.apply(null,arguments)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}function U(e,t){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},U(e,t)}var D=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=T(this,t,[e]))._submitCallback=n,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&U(e,t)}(t,e),n=t,(r=[{key:"_getInputValues",value:function(){var e={},t=this._popupElement.querySelector(".form");return Array.from(t.querySelectorAll("input")).forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;A(t,"setEventListeners",this,3)([]),this._popupElement.querySelector(".form").addEventListener("submit",(function(t){t.preventDefault(),e._submitCallback(e._getInputValues()),e.close()}))}},{key:"close",value:function(){A(t,"close",this,3)([]),this._popupElement.querySelector(".form").reset()}}])&&O(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(C);function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,F(r.key),r)}}function F(e){var t=function(e){if("object"!=x(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==x(t)?t:t+""}function z(e,t,n){return t=J(t),function(e,t){if(t&&("object"==x(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,V()?Reflect.construct(t,n||[],J(e).constructor):t.apply(e,n))}function V(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(V=function(){return!!e})()}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},N.apply(null,arguments)}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}function G(e,t){return G=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},G(e,t)}var H=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=z(this,t,[e]))._popupImage=n._popupElement.querySelector(".popup__image"),n._popupTitle=n._popupElement.querySelector(".popup__image-name"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&G(e,t)}(t,e),n=t,r=[{key:"open",value:function(e,n){var r,o,i;this._popupImage.src=n,this._popupImage.alt="Imagen de ".concat(e," "),this._popupTitle.textContent=e,(r=t,o=this,i=N(J(1&3?r.prototype:r),"open",o),function(e){return i.apply(o,e)})([])}}],r&&B(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(C);function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Q(r.key),r)}}function Q(e){var t=function(e){if("object"!=M(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==M(t)?t:t+""}function W(e,t,n){return t=$(t),function(e,t){if(t&&("object"==M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,X()?Reflect.construct(t,n||[],$(e).constructor):t.apply(e,n))}function X(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(X=function(){return!!e})()}function Y(e,t,n,r){var o=Z($(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function Z(){return Z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=$(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},Z.apply(null,arguments)}function $(e){return $=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},$(e)}function ee(e,t){return ee=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ee(e,t)}var te=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),W(this,t,[e])}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ee(e,t)}(t,e),n=t,(r=[{key:"open",value:function(e){Y(t,"open",this,3)([]),this.handleDeleteSubmit=e}},{key:"setEventListeners",value:function(){var e=this;Y(t,"setEventListeners",this,3)([]),this._form=this._popupElement.querySelector(".form"),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.handleDeleteSubmit(),e.close()}))}}])&&K(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(C);function ne(e){return ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ne(e)}function re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,oe(r.key),r)}}function oe(e){var t=function(e){if("object"!=ne(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=ne(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ne(t)?t:t+""}var ie=new(function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t,this._token=n},(t=[{key:"getUserInfo",value:function(){return fetch(this._baseUrl+"/users/me",{headers:{authorization:this._token,"Content-Type":"application/json"},method:"GET"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{headers:{authorization:this._token,"Content-Type":"application/json"},method:"GET"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateUser",value:function(e,t){return fetch(this._baseUrl+"/users/me",{headers:{authorization:this._token,"Content-Type":"application/json"},method:"PATCH",body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCard",value:function(e,t){return fetch(this._baseUrl+"/cards",{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"POST",body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateAvatar",value:function(e){return fetch(this._baseUrl+"/users/me/avatar",{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"PATCH",body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch(this._baseUrl+"/cards/"+e,{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"PUT"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"removeLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&re(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}())("https://around.nomoreparties.co/v1/web-es-cohort-15","80b5e925-605c-4006-ba50-cc4527fb2e95"),ue=(document.querySelector("#formAdd"),document.querySelector(".profile__avatar")),ce=null,ae=new g({nameSelector:".profile__info-name",aboutSelector:".profile__info-occupation"});ie.getUserInfo().then((function(e){ce=e,ae.setUserInfo({name:e.name,about:e.about}),ue.src=e.avatar,ie.getInitialCards().then((function(e){(e=new b({items:e,renderer:function(t){var n=new m(t,"place-grid__element",ce,{handleCardClick:function(){le.open(t.name,t.link)},handleDeleteCard:function(e,t){pe.open((function(){ie.deleteCard(e).then((function(){})),t()}))},handleAddLike:function(e){return ie.addLike(e)},handleRemoveLike:function(e){return ie.removeLike(e)}});e.addItem(n.createCard())}},".place-grid")).renderer()}))}));var le=new H("popupImage"),se=new D("popupEdit",(function(e){ie.updateUser(e.inputName,e.inputAbout).then((function(e){ae.setUserInfo({name:e.name,about:e.about}),se.close()}))}));o.addEventListener("click",(function(){se.open();var e=ae.getUserInfo();u.value=e.name,c.value=e.about,me.enableValidation()}));var fe=new D("popupAdd",(function(e){return ie.addCard(e.inputTitle,e.inputLink).then((function(e){var t=new m(e,"place-grid__element",ce,{handleCardClick:function(){le.open(e.name,e.link)},handleDeleteCard:function(e,t){pe.open((function(){ie.deleteCard(e).then((function(){})),t()}))},handleAddLike:function(e){return ie.addLike(e)},handleRemoveLike:function(e){return ie.removeLike(e)}});a.prepend(t.createCard())}))}));i.addEventListener("click",(function(){fe.open()}));var pe=new te("popupConfirmation"),ye=new D("popupEditAvatar",(function(e){return ie.updateAvatar(e.inputLink).then((function(e){s.src=e.avatar,s.alt="Profile Avatar",s.value="",ye.close()}))}));l.addEventListener("click",(function(){ye.open()}));var me=new r({formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",fieldsetSelector:".form__fieldset",inactiveButtonClass:"button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},"submit");me.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,